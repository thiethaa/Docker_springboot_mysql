#jdbc config
spring.datasource.url=jdbc:mysql://dock_mysql:3306/docker?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=password
#hibernate config
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true

#so mysql does not change the column name and throws table_name / column_name not found error
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


#NOTE: RUN THE DB FIRST before YOU RUN THE APP b/c the APP depends on the DB

#___________________________________  RUNNING THE JAVA / JAR CONTAINER  ___________________________________
#docker run -p 9090:8080 --name app_docker.jar --network app-mysql -d app_docker.jar:latest
#docker logs <container_id> -f



#___________________________________ RUNNING AND INTERACTING WITH A MYSQL DATABASE ___________________________________


# To run the dockerized mysql
# docker run --name dock_mysql --network app-mysql -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=docker -d mysql:latest

# To go inside / interact with the RUNNING MYSQL Server
#docker exec -it <RUNNING_MYSQL_CONTAINER_ID> mysql -uroot -p

#To see all the available databases:
#mysql> show databases;

#To go inside / use a particular database:
# use <database_name>
# mysql> use docker;

#To see all tables:
# mysql> show tables;  Empty set (0.00 sec) if there is no tables


#to create a table (employee table)
# CREATE TABLE Employee (ID VARCHAR(45) NOT NULL, name varchar(255) NOT NULL, salary int, CONSTRAINT PK_Employee PRIMARY KEY (ID));
#Query OK, 0 rows affected (0.03 sec)


# To see columns of a table ( in this case Employee table)
#desc Employee;

#mysql> desc Employee;
#+--------+--------------+------+-----+---------+-------+
#| Field  | Type         | Null | Key | Default | Extra |
#+--------+--------------+------+-----+---------+-------+
#| ID     | int          | NO   | PRI | NULL    |       |
#| name   | varchar(255) | NO   |     | NULL    |       |
#| salary | float        | YES  |     | NULL    |       |
#+--------+--------------+------+-----+---------+-------+


# MODIFYING COLUMN TYPE (IN OUR CASE THE ID field type (Sting) in Employee class did not match the column ID type in the database)
#mysql:Changing the ID column type> alter table Employee MODIFY COLUMN ID VARCHAR(45);
#mysql: Changing the salary column type> alter table Employee MODIFY COLUMN salary int;

        
# _________________________________________________________________________________________________________


#to run spring appCL
#docker run -p 9090:8080 --name app_docker.jar --network app-mysql -d app_docker.jar:latest

#docker logs <container_id> -f

